レビュー指摘

全体的に
もともとDB定義で書かれていたマスタの名称はコード内に定数化してそれを引用する
（定数ファイルのドキュメントは作る）

02_料理検索画面
・カテゴリやジャンル配下の細かい名称のラベルの名称は共通ファイル内に定数化されたものを使うこと。

03_料理検索結果
・カテゴリやジャンル配下の細かい名称のラベルの名称は共通ファイル内に定数化されたものを使うこと。
・ページングなしにする。（無限リロードの仕組みでページングさせる）
・名称フィルタをつける。
・ログイン時のユーザのアレルギーと合致する料理については行を赤色にしてアレルギーありのものとわかるようにする。

04_レシピ表示画面（HTML)
・材料、栄養、作り方はDBに登録された行単位の内容を表示するのではなくて、16_レシピ登録画面で登録された列の内容をそのまま表示させる。
・閲覧時にCookie（セッションストレージなど）に料理IDを保存すること。

05_新規登録画面
・性別やアレルギーの名称は共通ファイル内に定数化されたものを使うこと。
・アレルギー登録は５つまでにする。
・パスワード忘れた場合の質問も共通ファイル内に定数化して、それを使うこと。
・管理者権限→編集権限ぐらいに変える。

11_ユーザ管理画面(お気に入り料理の管理画面)
・料理結果の行単位に削除用のチェックボックスを配置する。
・削除ボタンは１個にする
・ページングなしにする。（無限リロードの仕組みでページングさせる）
・名称フィルタをつける。
・削除ボタンは１個にする。
・ログイン時のユーザのアレルギーと合致する料理については行を赤色にしてアレルギーありのものとわかるようにする。

12_ユーザ管理画面(カロリー管理画面)
（カロリーを登録する）
・（DBへの負荷を考慮し）登録量を減らすために、カレンダー選択は過去3年以内にする。
・料理を選択時はプルダウンじゃなくて、料理検索ダイアログで検索させて選んでレシピIDを戻すようにする。

（今までに登録したカロリー履歴を見る）
・カロリー登録時と同様に、カレンダー選択は過去3年以内にする。

13_ユーザ管理画面(体重管理画面)
（体重を登録する）
（今までに登録した体重履歴を見る）
・（DBへの負荷を考慮し）登録量を減らすために、カレンダー選択は過去3年以内にする。

14_ユーザ管理画面(プロフィール変更画面)
・性別やアレルギーの名称は共通ファイル内に定数化されたものを使うこと。
・アレルギー登録は５つまでにする。
・パスワード忘れた場合の質問も共通ファイル内に定数化して、それを使うこと。
・管理者権限→編集権限ぐらいに変える。

15_直近で閲覧した料理一覧画面
・ページングなしにする。（無限リロードの仕組みでページングさせる）
・名称フィルタをつける。
・ユーザ閲覧履歴テーブルから取得せずに、Cookie（セッションストレージなど）に保存された料理IDを使用して取得すること。
・ログイン時のユーザのアレルギーと合致する料理については行を赤色にしてアレルギーありのものとわかるようにする。

16_レシピ登録画面
・材料、栄養、作り方は行追加の仕組みじゃなくて、textareaみたいなで１箇所の入力にさせる。

（DB設計について）
・ユーザアレルギー管理テーブルは破棄して、ユーザ情報テーブルにアレルギーIDを５個まで登録できるようにする。
・お気に入りレシピは個数制限は一旦しない、現状のままでユーザお気に入りレシピテーブルで管理する。
・カテゴリテーブル、ジャンルテーブル、調理方法テーブル、アレルギーテーブルを共通ファイル内に定数化すること。
・ユーザアレルギー管理テーブルとユーザ体重履歴テーブルを統合して、体重とカロリーは別列で管理すること。
・ユーザ閲覧履歴テーブルは破棄すること。（閲覧時にCookie（セッションストレージなど）から取得するため）
・調理テーブルは破棄して、レシピテーブルに列として材料情報、栄養情報、作り方情報を追加して料理IDを主キーとして完結すること。
・ER図は作成すること。



